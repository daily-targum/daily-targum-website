name: Master

on: 
  push:
    branches:
      - master

jobs:
  setup-linux:
    name: Setup - Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        id: cache
        with:
          path: node_modules
          key: v1-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: Yarn Install
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn 
  test-lint:
    name: Test - Lint
    runs-on: ubuntu-latest
    needs: setup-linux
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        id: cache
        with:
          path: node_modules
          key: v1-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: Lint
        run: yarn lint
  test-typecheck:
    name: Test - Type Check
    runs-on: ubuntu-latest
    needs: setup-linux
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        id: cache
        with:
          path: node_modules
          key: v1-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: Type Check
        run: yarn typescript
  test-jest:
    name: Test - Jest
    runs-on: ubuntu-latest
    needs: setup-linux
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        id: cache
        with:
          path: node_modules
          key: v1-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: Test
        run: yarn coverage
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          AMPLITUDE_KEY: ${{ secrets.AMPLITUDE_KEY }}
          AWS_APPSYNC_URL: ${{ secrets.AWS_APPSYNC_URL }}
          AWS_APPSYNC_REGION: ${{ secrets.AWS_APPSYNC_REGION }}
          AWS_APPSYNC_API_KEY: ${{ secrets.AWS_APPSYNC_API_KEY }}
          CONTENTFUL_SPACE: ${{ secrets.CONTENTFUL_SPACE }}
          CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_ACCESS_TOKEN }}
          CONTENTFUL_ACCESS_TOKEN_DRAFTS: ${{ secrets.CONTENTFUL_ACCESS_TOKEN_DRAFTS }}
      - uses: codecov/codecov-action@v1
  test-chromatic:
    name: Test - Chromatic
    runs-on: ubuntu-latest
    needs: setup-linux
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/cache@v1
        id: cache
        with:
          path: node_modules
          key: v1-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: Test
        run: yarn chromatic --project-token $CHROMATIC_TOKEN --exit-zero-on-changes
        env:
          CHROMATIC_TOKEN: ${{ secrets.CHROMATIC_TOKEN }}
  deploy-vercel:
    name: Deploy - Vercel
    runs-on: ubuntu-latest
    needs: [test-lint, test-typecheck]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        id: cache
        with:
          path: node_modules
          key: v1-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - uses: amondnet/vercel-action@v19
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }} # Required
          github-token: ${{ secrets.GITHUB_TOKEN }} #Optional 
          vercel-args: '--prod'
          vercel-org-id: ${{ secrets.ORG_ID }}  #Required
          vercel-project-id: ${{ secrets.PROJECT_ID }} #Required
          alias-domains: |
            staging.dailytargum.com
  lighthouse-check:
    name: Auddit - Lighthouse
    runs-on: ubuntu-latest
    needs: deploy-vercel
    steps:
      - name: Create Report Dir
        run: mkdir ./report
      - name: Run Lighthouse
        uses: foo-software/lighthouse-check-action@master
        continue-on-error: true
        with:
          accessToken: ${{ secrets.GITHUB_TOKEN }} #Optional 
          urls: 'https://staging.dailytargum.com/,https://staging.dailytargum.com/section/news,https://staging.dailytargum.com/section/sports,https://staging.dailytargum.com/section/opinions,https://staging.dailytargum.com/section/inside-beat,https://staging.dailytargum.com/page/privacy-policy,https://staging.dailytargum.com/videos,https://staging.dailytargum.com/section/humans-of-rutgers'
          commentUrl: https://api.github.com/repos/$GITHUB_REPOSITORY/commits/$GITHUB_SHA/comments
          outputDirectory: ./report
      - name: Upload results as an artifact
        uses: actions/upload-artifact@master
        continue-on-error: true
        with:
          name: report
          path: './report'
